name: auth--be-api-${self:provider.stage}
schema:
  - ./graphql/schema.graphql
  - ./graphql/queries.graphql

authentication:
  type: API_KEY
  # additionalAuthenticationProviders:
  #   - authenticationType: OPENID_CONNECT
  #     openIDConnectConfig:
  #       issuer: ${self:provider.environment.ISSUER_URL}
  #       clientId: ${self:provider.environment.CLIENT_ID}
apiKeys:
  - name: "${self:service}-api"
    description: "${self:provider.stage} API key."
logging:
  level: ALL
  retentionInDays: 14
dataSources:
  register:
    type: "AWS_LAMBDA"
    config:
      functionArn: ${self:custom.registerLambdaArn}
  login:
    type: "AWS_LAMBDA"
    config:
      functionArn: ${self:custom.loginLambdaArn}
  logout:
    type: "AWS_LAMBDA"
    config:
      functionArn: ${self:custom.logoutLambdaArn}
  getUser:
    type: "AWS_LAMBDA"
    config:
      functionArn: ${self:custom.getUserLambdaArn}
     
resolvers:
  Mutation.login:
    kind: UNIT
    dataSource: login
  Mutation.logout:
    kind: UNIT
    dataSource: logout
  Mutation.register:
    kind: UNIT
    dataSource: register
  Query.getUser:
    kind: UNIT
    dataSource: getUser
